<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.comment.dao.VfcommentDAO">
	<resultMap type="vfcomment" id="vfcommentMap">
		<id column="vfcomment_id" property="vfcommentId"/>
		<result column="vfcomment_content" property="vfcommentContent"/>
		<result column="vfcomment_date" property="vfcommentDate"/>
		<result column="vfboard_id" property="vfboardId"/>
		<result column="user_id" property="userId"/>
	</resultMap>

	<!-- 자유게시판 댓글 조회 -->
	<select id="vfcommentList" parameterType="vfcomment" resultMap="vfcommentMap">
		SELECT	vfcomment_id, vfcomment_content, vfcomment_date, vfboard_id, user_id
		FROM 	VFcomment
		WHERE 	vfboard_id = #{vfboardId}
		ORDER BY vfcomment_id DESC
	</select>
	
	<!-- 자유게시판 댓글 작성 -->
	<insert id="vfcommentInsert" parameterType="vfcomment">
		<selectKey keyProperty="vfcommentId" resultType="int" order="BEFORE">
			select VFcomment_seq.nextval from dual
		</selectKey>
		INSERT INTO VFcomment (vfcomment_id, vfcomment_content, vfcomment_date, vfboard_id, user_id)
		VALUES (#{vfcommentId}, #{vfcommentContent}, sysdate, #{vfboardId}, #{userId})
	</insert>
	
	<!-- 자유게시판 댓글 수정 -->
	<update id="vfcommentUpdate" parameterType="vfcomment">
		UPDATE VFcomment
		SET vfcomment_content = #{vfcommentContent}, vfcomment_date = sysdate
		WHERE vfcomment_id = #{vfcommentId}  
	</update>
	
	<!-- 자유게시판 댓글 삭제 -->
	<delete id="vfcommentDelete" parameterType="vfcomment">
		DELETE
		FROM VFcomment
		WHERE vfcomment_id = #{vfcommentId}
	</delete>
	
	<select id="vfcommentDetail" parameterType="vfcomment" resultMap="vfcommentMap">
		WITH first_query AS (
		    SELECT f.vfcomment_id, f.user_id, r.user_id AS reuserId, r.report_detail, r.report_sort, r.report_id
		    FROM vfcomment f LEFT JOIN report r ON f.vfcomment_id = r.vfcomment_id
		    WHERE f.vfcomment_id = #{vfcommentId}
		),
		second_query AS (
		    SELECT f.vfcomment_id, f.user_id, r.user_id AS reuserId, r.report_detail, r.report_sort, r.report_id
		    FROM vfcomment f LEFT JOIN report r ON f.vfboard_id = r.vfboard_id
		    WHERE f.vfcomment_id = #{vfcommentId} AND (r.user_id = #{userId} OR r.user_id IS NULL)
		),
		third_query AS (
		    SELECT vfcomment_id, user_id, NULL as reuserId, NULL as report_detail, Null as report_sort, Null as report_id
		    FROM vfcomment
		    WHERE vfcomment_id = #{vfcommentId}
		)
		SELECT *
		FROM (
		    SELECT * FROM first_query
		    UNION ALL
		    SELECT * FROM second_query
		    UNION ALL
		    SELECT * FROM third_query
		) result
		WHERE ROWNUM = 1
	</select>
	
</mapper>